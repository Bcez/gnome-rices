function S3Uploader(t,e,a,o,r,s,l,i,n,d){this.type=t,this.videoId=e,this.userUploadBucket=a,this.userUploadKey=o,this.acl=r,this.totalParts=0,this.userUploadId=void 0,this.finishedRecording=!1,this.rejectFurtherBlobs=!1,this.uploadBuffer=[],this.uploadedParts=[],this.createUploadRequest=void 0,this.completeRequestSent=!1,this.uploaded=!1,this.s3Logger=l,this.errorHandler=i,this.totalBlobCount=0,this.assetId=n,this.fileUploadRates=[],this.fileSize=0,this.allowedDelay=s,this.MAX_UPLOAD_TRIES=5,this.NODATA_WARNING_TIME=1e4,this.uploadStatsData={},this.allPartsUploadProgress=0,this.timeTakenForUploading=0,this.cancelledExternal=!1,this.initialized=!1,this.initializationError=!1,this.useAccelerate=d,this.initializeAWS(),this.uploadQueue=[],this.currentProcessCount=0,this.uploadTimeThreshold=85e3,this.latestUploadTime,this.uploadMeta={},this.desirableProcessCount=1,this.uploadRetries={},this.uploadSpeeds=[],this.slowUpload=!1,this.uploadPartHandlers={},this.uploadError=!1,this.fullBlobSize=0}var self;S3Uploader.prototype.onUploadingFile=function(t){this.monitorUploadProgress=t},S3Uploader.prototype.initializeAWS=function(t){var e="cijidiollmnkegoghpfobabpecdkeiah"!==chrome.runtime.id,a=e?"us-east-1:8e44cb6f-5bb6-47a0-b6f7-e682b1827dc4":"us-east-1:df0a8fb6-f7ad-417c-be80-cdba8aa4a215",o="us-east-1";-1!==this.userUploadBucket.indexOf("-in")&&(a=e?"ap-south-1:3b87476b-e4de-43e1-85e9-9f24f060b566":"ap-south-1:b4a79053-b71d-4a2e-851b-c1a3fc4a403f",o="ap-south-1");var r=this;this.uploadStatus=constants.uploadStatus.WAITING,console.info("initializing AWS",{timezoneOffset:(new Date).getTimezoneOffset()}),APIClient.getFederatedAwsToken(o,function(e){if(console.info("got federated aws token",{response:e}),e.error)return r.initializationError=CommonUtils.getError("INVALID_FEDERATED_TOKEN"),console.error("error getting federated aws token",{error:e}),void r.handleError(CommonUtils.getError("INVALID_FEDERATED_TOKEN"));var s={Bucket:r.userUploadBucket,Key:r.userUploadKey,ACL:r.acl};console.info("s3 create params ",{createParams:s}),AWS.config.region=o,AWS.config.credentials=new AWS.CognitoIdentityCredentials({IdentityPoolId:a,IdentityId:e.identity_id,Logins:{"cognito-identity.amazonaws.com":e.token}}),AWS.events.on("retry",function(t){if("RequestTimeTooSkewed"===t.error.name){console.error("User time is not correct. Handling error!");var e=Date.parse(t.httpResponse.headers.date),a=(new Date).getTime();AWS.config.systemClockOffset=e-a,t.error.retryable=!0,console.log("Setting systemClockOffset to:",AWS.config.systemClockOffset),console.info("Clock Offset Details",{awsSCO:AWS.config.systemClockOffset,awsTS:new Date(e),bTS:new Date(a)}),console.log("Retrying uploading to S3 once more...")}}),r.s3=new AWS.S3({apiVersion:"2006-03-01",params:{Bucket:r.userUploadBucket},useAccelerateEndpoint:r.useAccelerate,httpOptions:{timeout:6e5},maxRetries:0});var l=(new Date).getTime();r.uploadStatsData.rttValues=[],r.createUploadRequest=r.s3.createMultipartUpload(s,function(e,a){if(console.info("Create multipart request time ",{brRtt:navigator.connection.rtt,cmu:(new Date).getTime()-l}),e){var o="MULTIPART_CREATE_ERROR";e&&"RequestTimeTooSkewed"===e.name&&(o="INVALID_DATE_ERROR"),console.error("error while creating MultipartUpload",{error:e}),r.initializationError=CommonUtils.getError(o),r.handleError(CommonUtils.getError(o)),r.logData("error while creating MultipartUpload"+e.stack)}else r.logData("created MultipartUpload"),console.info("got createMultipartUpload response",{response:a}),r.userUploadId=a.UploadId,r.initialized=!0,t&&t()})},function(t){console.error("error getting federated aws token",{error:t}),r.initializationError=CommonUtils.getError("INVALID_FEDERATED_TOKEN"),r.handleError(CommonUtils.getError("INVALID_FEDERATED_TOKEN"))})},S3Uploader.prototype.onDataAvailable=function(t,e,a){if((!t.cancelledExternal||a)&&(0==t.totalBlobCount&&t.recordStartTime&&console.info("time for first data",{time:(new Date).getTime()-t.recordStartTime}),t.uploadBuffer.push(e),t.totalBlobCount++,t.uploadError||(t.uploadStatus=constants.uploadStatus.UPLOADING),t.fullBlobSize+=e.size,t.initialized&&0==t.rejectFurtherBlobs&&void 0!=t.userUploadId&&(t.fullBlobSize>constants.PARTUPLOADSIZE||t.finishedRecording))){t.fullBlobSize=0;var o=new Blob(t.uploadBuffer,{type:"video/webm"});t.constructParamsForUpload(o,a)}},S3Uploader.prototype.constructParamsForUpload=function(t,e){var a=this;console.log("S3Uploader.uploadBlob blob",t),console.info("S3Uploader.uploadBlob uploading"),a.uploadBuffer=[],a.totalParts++;var o={Bucket:a.userUploadBucket,Key:a.userUploadKey,PartNumber:a.totalParts,UploadId:a.userUploadId,Body:t};a.uploadError||(a.uploadRetries[a.totalParts]=1,a.uploadMeta[a.totalParts]=(new Date).getTime(),a.uploadQueue.push(o),a.uploadStatsData[a.totalParts]={sz:o.Body.size,completed:0}),a.cancelledExternal||e||IDBUtils.putRecordedVideoBlob(a.videoId,t,function(){console.info("wrote blob to local db")}),a.uploadError||this.checkAndUpload(void 0,e)},S3Uploader.prototype.checkAndUpload=function(t,e){if(t&&this.currentProcessCount--,this.latestUploadTime){var a=Math.floor(this.uploadTimeThreshold/this.latestUploadTime);this.latestUploadTime<this.uploadTimeThreshold?(this.slowUpload=!1,this.desirableProcessCount=Math.max(Math.round(.75*a),1)):(this.slowUpload=!0,this.desirableProcessCount=Math.max(a,1))}if(this.currentProcessCount<this.desirableProcessCount)for(var o=Math.min(this.desirableProcessCount-this.currentProcessCount,this.uploadQueue.length);o>0;){var r=this.uploadQueue.pop(0);this.uploadMeta[r.PartNumber]=(new Date).getTime(),this.uploadPart(r,e),this.currentProcessCount++,o--}},S3Uploader.prototype.uploadPart=function(t,e){var a=this;console.log("trying upload .... "+a.uploadRetries[t.PartNumber]),a.logData("trying upload .... "+a.uploadRetries[t.PartNumber]);var o=(new Date).getTime(),r=(new Date).getTime(),s=(new Date).getTime(),l=[];l.push(navigator.connection.rtt);var i=(new Date).getTime()/1e3-30;a.uploadStatsData[t.PartNumber].startTime=(new Date).getTime();var n=a.s3.uploadPart(t,function(s,i){if(s){if(a.cancelledExternal&&!e)return;-1==JSON.stringify(s).indexOf("TimeoutError")&&-1==JSON.stringify(s).indexOf("Timeout")&&-1==JSON.stringify(s).indexOf("RequestAbortedError")&&-1==JSON.stringify(s).indexOf("NetworkingError")||a.handleError(CommonUtils.getError("UPLOADING_SLOWLY")),console.error("s3.uploadPart error ",{partNumber:t.PartNumber,error:s}),a.currentProcessCount--,a.uploadRetries[t.PartNumber]<a.MAX_UPLOAD_TRIES?a.uploadError||(console.log("Retrying upload of part: #",t.PartNumber),a.latestUploadTime=9999999,a.uploadMeta[t.PartNumber]=(new Date).getTime(),a.uploadRetries[t.PartNumber]+=1,a.uploadQueue.push(t),a.uploadStatsData[t.PartNumber].rt=a.uploadRetries[t.PartNumber],delete a.uploadMeta[t.PartNumber],delete a.uploadPartHandlers[t.PartNumber],a.uploadStatsData[t.PartNumber].completed=0,a.checkAndUpload(void 0,e)):(a.uploadError=!0,a.abortCurrentUploads(a),a.sendAbortRequest(function(){}),a.handleError(CommonUtils.getError("MULTIPART_UPLOAD_ERROR")),console.warn("Failed uploading part: #",t.PartNumber))}else{etag=i.ETag;var n=(new Date).getTime()-a.uploadStatsData[this.request.params.PartNumber].startTime;a.uploadStatsData[this.request.params.PartNumber].tt=n;var d=8*a.uploadStatsData[this.request.params.PartNumber].sz,u=Math.round(d/(n/1e3)),p=(u/1024).toFixed(2);a.uploadSpeeds.push(p),delete a.uploadStatsData[this.request.params.PartNumber].startTime,a.uploadStatsData.rttValues.push(navigator.connection.rtt),console.info("Complete blob part upload",{partNumber:this.request.params.PartNumber,stats:a.uploadStatsData[this.request.params.PartNumber]}),a.uploadedParts.push({PartNumber:Number(this.request.params.PartNumber),ETag:i.ETag}),a.calculateProgress(0,(new Date).getTime()-r);var c=t.Body.size/((new Date).getTime()-o);a.fileUploadRates.push(c),a.fileSize=a.fileSize+t.Body.size/1024;for(var h=a.fileUploadRates.length,m=0,f=0;f<h;f++)m+=a.fileUploadRates[f];for(var g=m/h*.976,U={upload_rate:g,user_upload_key:a.userUploadKey,asset_id:a.assetId,fileSize:a.fileSize,parts:h},P=0,f=0;f<l.length;f++)P+=l[f];U.rtt=P/l.length,U.upstats={partNumber:this.request.params.PartNumber,stats:a.uploadStatsData[this.request.params.PartNumber]},console.info("RTT VALUE UPDATE",{asset_id:a.assetId,part_num:Number(this.request.params.PartNumber||0),on_upload_complete:!0,rtt:Number(U.rtt||0),avg_upload_rate:Number(g||0),is_finished:a.finishedRecording,media_type:a.type,user_upload_key:a.userUploadKey}),APIClient.updateUploadRate(U),a.logData("upload part success. total parts="+a.totalParts+",uploaded parts = "+a.uploadedParts.length),console.log("total s3 parts = "+a.totalParts),console.log("uploaded s3 parts = "+a.uploadedParts.length),t.Body.size>=constants.PARTUPLOADSIZE&&(a.latestUploadTime=(new Date).getTime()-a.uploadMeta[this.request.params.PartNumber]),delete a.uploadMeta[this.request.params.PartNumber],a.checkAndUpload(this.request.params.PartNumber,e),console.info("part upload complete",{total:a.totalParts,comp:a.uploadedParts.length})}}).on("httpUploadProgress",function(e){a.uploadStatsData[this.params.PartNumber].completed=e.loaded;var o=Math.round(e.loaded/e.total*100),n=(new Date).getTime();if(r=n,l.push(navigator.connection.rtt),(new Date).getTime()/1e3-i>=30){for(var o=Math.round(e.loaded/e.total*100),d=(new Date).getTime(),u=t.Body.size*o/100/(d-s),p=0,c=0;c<l.length;c++)p+=l[c];console.info("RTT VALUE UPDATE",{asset_id:a.assetId,part_num:Number(a.fileUploadRates.length+o/100||0),on_upload_complete:!1,rtt:Number(p/l.length||0),avg_upload_rate:Number(u||0),is_finished:a.finishedRecording,media_type:a.type,user_upload_key:a.userUploadKey}),i=(new Date).getTime()/1e3}a.calculateProgress()});this.uploadPartHandlers[t.PartNumber]=n},S3Uploader.prototype.calculateProgress=function(){var t=0,e=0;this.timeTakenForUploading=0;for(var a=1;a<=this.totalParts;a++)this.uploadStatsData[a].tt&&(this.timeTakenForUploading+=this.uploadStatsData[a].tt),t+=this.uploadStatsData[a].sz,e+=this.uploadStatsData[a].completed;this.allPartsUploadProgress=e/t*100,this.monitorUploadProgress&&this.monitorUploadProgress(this.allPartsUploadProgress,this.timeTakenForUploading,this.userUploadKey,this.uploadedParts.length,this.totalParts,t,e,this.slowUpload)},S3Uploader.prototype.abortCurrentUploads=function(t){for(var e in t.uploadPartHandlers)try{t.uploadPartHandlers.hasOwnProperty(e)&&(t.uploadPartHandlers[e].params&&(t.uploadStatsData[t.uploadPartHandlers[e].params.PartNumber].completed=0),t.uploadPartHandlers[e].abort(),delete t.uploadPartHandlers[e])}catch(t){}t.uploadPartHandlers={}},S3Uploader.prototype.finish=function(t,e){var a=this;if(this.uploadError){var o=new Blob(a.uploadBuffer,{type:"video/webm"});console.info("final leftover blob size = "+o.size),o.size>0&&void 0!=a.userUploadId&&a.constructParamsForUpload(o,e),t({status:!1})}else{if(this.initializationError||this.cancelledExternal&&!e)return;if(console.info("cancelledExternal = "+this.cancelledExternal+", overrideCancelled = "+e+", totalBlobCount = "+this.totalBlobCount),this.finishedRecording=!0,this.rejectFurtherBlobs=!0,this.uploadedAll=!1,this.userFinishTime=(new Date).getTime(),this.internetSpeedUpdated=!1,0==this.totalBlobCount)return void a.handleError(CommonUtils.getError("screen"==a.type?"NOTHING_RECORDED":"NO_DATA_AVAILABLE"));var o=new Blob(a.uploadBuffer,{type:"video/webm"});if(console.info("final leftover blob size = "+o.size),o.size>0)var r=setInterval(function(){void 0!=a.userUploadId&&(clearInterval(r),a.constructParamsForUpload(o,e),a.uploadedAll=!0)},200);else this.uploadedAll=!0;var s=setInterval(function(){if(a.cancelledExternal&&!e)return void clearInterval(s);if(1==a.uploadedAll&&a.totalParts==a.uploadedParts.length){clearInterval(s);var o={Bucket:a.userUploadBucket,Key:a.userUploadKey,UploadId:a.userUploadId,MultipartUpload:{Parts:a.uploadedParts}};if(a.uploadedParts.length<=0)return console.error("error while completing upload, no data available"),void a.handleError(CommonUtils.getError("screen"==a.type?"NOTHING_RECORDED":"NO_DATA_AVAILABLE"));console.info("completing s3 multipartupload",{params:o}),a.uploadedParts.sort(function(t,e){return t.PartNumber-e.PartNumber}),console.info("Uploaded parts : ",{parts:a.uploadedParts}),a.completeRequestSent=!0;var r=(new Date).getTime();a.s3.completeMultipartUpload(o,function(e,o){e?(console.error("error while completing multipartupload",{error:e}),a.handleError(CommonUtils.getError("MULTIPART_COMPLETE_ERROR")),a.logData("complete uplaod error"+e.stack)):(a.logData("completed upload!!"),a.uploaded=!0,a.uploadStatus=constants.uploadStatus.UPLOADED,t(o),console.info("Upload completed ",{rtt:a.uploadStatsData.rttValues,arRtt:navigator.connection.rtt,cmu:(new Date).getTime()-r,speeds:a.uploadSpeeds,res:o}))})}else!a.internetSpeedUpdated&&(new Date).getTime()-a.userFinishTime>12e4&&(a.internetSpeedUpdated=!0,a.handleError(CommonUtils.getError("NETWORK_REQUEST_FAILING")))},500)}},S3Uploader.prototype.handleError=function(t){void 0!=t&&"UPLOADING_SLOWLY"!=t.name&&"NETWORK_REQUEST_FAILING"!=t.name&&(this.uploadStatus=constants.uploadStatus.FAILED),this.errorHandler?this.errorHandler(t):console.warn("ERROR HANDLER UNDEFINED",{error:t})},S3Uploader.prototype.logData=function(t){},S3Uploader.prototype.recordingStarted=function(){var t=this;this.recordStartTime=(new Date).getTime(),this.delayTimeout=setTimeout(function(){0==t.totalBlobCount&&t.handleError(CommonUtils.getError("screen"==t.type?"NOTHING_RECORDED":"NO_DATA_AVAILABLE"))},this.allowedDelay),setTimeout(function(){0==t.totalBlobCount&&showNotification("screen"==t.type?constants.messages.SCREEN_NODATA_WARNING:constants.messages.WEBCAM_NODATA_WARNING)},this.NODATA_WARNING_TIME)},S3Uploader.prototype.sendAbortRequest=function(t){var e=this,a={Bucket:e.userUploadBucket,Key:e.userUploadKey,UploadId:e.userUploadId};e.s3.abortMultipartUpload(a,function(a,o){a?console.error("error while aborting multipartupload",{error:a}):console.warn("aborted multipartupload",{res:o}),t(e)})},S3Uploader.prototype.cancelUpload=function(t,e){clearTimeout(this.delayTimeout),this.cancelledExternal=!0,console.info("setting cancelledExternal = "+this.cancelledExternal),this.totalParts=0,this.finishedRecording=!1,this.rejectFurtherBlobs=!1,this.uploadBuffer=[],this.uploadedParts=[],this.uploadPartRequests=[],this.completeRequestSent=!1,this.uploaded=!1,this.MAX_UPLOAD_TRIES=5,this.totalBlobCount=0,this.fileUploadRates=[],this.fileSize=0,this.allPartsUploadProgress=0,this.timeTakenForUploading=0,this.uploadStatus=constants.uploadStatus.CANCELLED,this.initialized=!1,this.initializationError=!1,this.uploadQueue=[],this.currentProcessCount=0,this.latestUploadTime,this.uploadMeta={},this.desirableProcessCount=1,this.uploadRetries={},this.uploadSpeeds=[],this.slowUpload=!1,this.uploadError=!1,this.abortCurrentUploads(e),this.sendAbortRequest(t),this.uploadStatsData={}},S3Uploader.prototype.resetUpload=function(){this.uploadStatus=constants.uploadStatus.FAILED,this.uploadPartHandlers={}};